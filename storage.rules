rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    match /videos/{userId}/{filename} {
      // Allow read access to authenticated users
      allow read: if request.auth != null;
      
      // Allow write access to authenticated users for their own directory
      allow write: if request.auth != null 
                   && request.auth.uid == userId
                   && request.resource.size < 100 * 1024 * 1024 // 100MB
                   && (request.resource.contentType.matches('video/.*') || request.resource.contentType.matches('image/.*'));
      
      // Allow delete access only to the video owner
      allow delete: if request.auth != null && request.auth.uid == userId;
    }

    match /thumbnails/{userId}/{filename} {
      // Allow read access to authenticated users
      allow read: if request.auth != null;
      
      // Allow write access to authenticated users for their own directory
      allow write: if request.auth != null 
                   && request.auth.uid == userId
                   && request.resource.size < 5 * 1024 * 1024 // 5MB
                   && request.resource.contentType.matches('image/.*');
      
      // Allow delete access only to the thumbnail owner
      allow delete: if request.auth != null && request.auth.uid == userId;
    }

    // Default rules for other paths
    match /{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
  }
} 
